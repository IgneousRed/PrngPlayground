// 28/19(28/17), 38/12(41/15) | 0.701904296875
// const a = self.state[1] -% self.state[0];
// self.state[0] = self.state[2] +% self.state[1];
// self.state[1] = a -% self.state[2];
// self.state[2] = self.state[3] -% bits.ror(a, 5); // 5, 9
// self.state[3] +%= dev.oddPhiFraction(Word);
// return self.state[0];

// 27/13(28/18), 38/20(39/12) | 0.6561279296875
// const a = self.state[1] +% self.state[0];
// self.state[0] = self.state[1] -% bits.ror(self.state[2], 5); // 5, 10
// self.state[1] = a +% self.state[2];
// self.state[2] = a ^ self.state[3];
// self.state[3] +%= dev.oddPhiFraction(Word);
// return self.state[0];

// 28/23(28/19), 40/X(40/11) | 0.640869140625
// const a = self.state[1] ^ self.state[0];
// self.state[0] = self.state[1] -% bits.ror(self.state[2], 3); // 3, 10
// self.state[1] = a +% self.state[2];
// self.state[2] = a ^ self.state[3];
// self.state[3] +%= dev.oddPhiFraction(Word);
// return self.state[0];

// -------------------------------------------------------------------------------------------------

// ?(?), ?(40/17) | 0.67138671875
// const a = self.state[0];
// const b = bits.ror(a, 5) +% self.state[2];
// self.state[0] = self.state[2] +% self.state[1];
// self.state[1] = b ^ self.state[3];
// self.state[2] = a +% self.state[0];
// self.state[3] +%= dev.oddPhiFraction(Word);
// return b;
