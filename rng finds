28/20 0.9002685546875
const result = self.state[0] +% self.state[1] +% self.state[3];
self.state[0] = self.state[1] ^ (self.state[1] >> k[0]);
self.state[1] = self.state[2] +% (self.state[2] << k[1]);
self.state[2] = bits.ror(self.state[2], k[2]) +% result;
return result;

28/19 0.885009765625
const a = self.state[0];
self.state[0] = bits.ror(self.state[2], 3) -% self.state[1];
self.state[1] = self.state[2] ^ self.state[3];
self.state[2] = bits.ror(a, 7) +% self.state[0];
return self.state[1];

26/33 0.79345703125
var a = self.state[0] -% self.state[3];
self.state[0] = self.state[1] -% self.state[2];
self.state[1] = self.state[2] -% a;
self.state[2] = bits.ror(a, 5) -% self.state[0];
return self.state[1]; // 2 26/14

28/19 0.701904296875
var a = self.state[1] -% self.state[0];
self.state[0] = self.state[1] +% self.state[2];
self.state[1] = a -% self.state[2];
self.state[2] = self.state[3] -% bits.ror(a, 5);
return self.state[0];

27/14 0.8544921875
var a = self.state[2] -% self.state[0];
self.state[0] = self.state[1] -% self.state[2];
self.state[1] = self.state[2] -% a;
self.state[2] = self.state[3] +% bits.ror(a, 5);
return self.state[1];
